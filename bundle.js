(()=>{"use strict";class t{constructor(t,e){this.canvas=t,this.context=t.getContext("2d"),this.context.imageSmoothingEnabled=!0,this.board=e,this.cellSize=30,this.rows=0,this.cols=0,this.setCanvasSize(),this.updateGridSize()}setCanvasSize(){this.canvas.width=.4*window.innerWidth,this.canvas.height=.8*window.innerHeight}updateGridSize(){this.cellSize=30,this.rows=Math.floor(this.canvas.height/this.cellSize),this.cols=Math.floor(this.canvas.width/this.cellSize),this.canvas.height=this.rows*this.cellSize,this.canvas.width=this.cols*this.cellSize}clear(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height)}drawGrid(){for(let t=0;t<this.board.grid.length;t++)for(let e=0;e<this.board.grid[t].length;e++){const i=this.board.grid[t][e];i?this.drawCell(e,t,i):this.drawCell(e,t,"transparent")}}drawBoard(){for(let t=0;t<this.board.grid.length;t++)for(let e=0;e<this.board.grid[t].length;e++)this.board.grid[t][e]&&this.drawCell(e,t,this.board.grid[t][e])}drawTetromino(t){t.getCurrentShape().forEach(((e,i)=>{e.forEach(((e,r)=>{e&&this.drawCell(t.x+r,t.y+i,t.color)}))}))}drawCell(t,e,i){this.context.fillStyle=i,this.context.fillRect(t*this.cellSize,e*this.cellSize,this.cellSize,this.cellSize),this.context.strokeStyle="black",this.context.strokeRect(t*this.cellSize,e*this.cellSize,this.cellSize,this.cellSize)}displayScore(t){this.context.fillStyle="black",this.context.font="30px Arial",this.context.fillText(`Score: ${t}`,10,30)}render(t,e){this.clear(),this.drawGrid(),this.drawBoard(),this.drawTetromino(t),this.displayScore(e)}}const e={I:{shape:[[[1,1,1,1]],[[1],[1],[1],[1]],[[1,1,1,1]],[[1],[1],[1],[1]]],color:"cyan"},J:{shape:[[[0,0,1],[1,1,1]],[[1,0],[1,0],[1,1]],[[1,1,1],[1,0,0]],[[1,1],[0,1],[0,1]]],color:"blue"},L:{shape:[[[1,0,0],[1,1,1]],[[1,1],[1,0],[1,0]],[[1,1,1],[0,0,1]],[[0,1],[0,1],[1,1]]],color:"orange"},O:{shape:[[[1,1],[1,1]],[[1,1],[1,1]],[[1,1],[1,1]],[[1,1],[1,1]]],color:"yellow"},S:{shape:[[[0,1,1],[1,1,0]],[[1,0],[1,1],[0,1]],[[0,1,1],[1,1,0]],[[1,0],[1,1],[0,1]]],color:"green"},T:{shape:[[[0,1,0],[1,1,1]],[[1,0],[1,1],[1,0]],[[1,1,1],[0,1,0]],[[0,1],[1,1],[0,1]]],color:"purple"},Z:{shape:[[[1,1,0],[0,1,1]],[[0,1],[1,1],[1,0]],[[1,1,0],[0,1,1]],[[0,1],[1,1],[1,0]]],color:"red"}};class i{constructor(t){const i=e[t];this.shape=i.shape,this.color=i.color,this.currentRotation=0,this.x=3,this.y=0}rotate(){this.currentRotation=(this.currentRotation+1)%this.shape.length}getCurrentShape(){return this.shape[this.currentRotation]}}const r=document.getElementById("canvas"),s=new class{getCols(){return this.cols}getRows(){return this.rows}constructor(t,e,i){this.rows=t,this.cols=e,this.context=i.getContext("2d"),this.cellSize=30,this.grid=Array.from({length:t},(()=>Array(e).fill(null)))}isPositionValid(t){const e=t.getCurrentShape();for(let i=0;i<e.length;i++)for(let r=0;r<e[i].length;r++)if(e[i][r]){const e=t.x+r,s=t.y+i;if(e<0||e>=this.cols||s>=this.rows||this.grid[s][e])return!1}return!0}placeTetromino(t){const e=t.getCurrentShape();for(let i=0;i<e.length;i++)for(let r=0;r<e[i].length;r++)if(e[i][r]){const e=t.x+r,s=t.y+i;s>=0&&s<this.rows&&e>=0&&e<this.cols&&(this.grid[s][e]=t.color)}}clearFullLines(){let t=0;for(let e=this.rows-1;e>=0;e--)this.grid[e].every((t=>null!==t))&&(t++,this.grid.splice(e,1),this.grid.unshift(Array(this.cols).fill(null)));return t}drawTetromino(t){const e=t.getCurrentShape(),i=t.color;for(let r=0;r<e.length;r++)for(let s=0;s<e[r].length;s++)e[r][s]&&this.drawCell(t.x+s,t.y+r,i)}drawCell(t,e,i){this.context.fillStyle=i,this.context.fillRect(t*this.cellSize,e*this.cellSize,this.cellSize,this.cellSize)}}(20,10,r),o=new class{constructor(e,i){this.canvas=e,this.board=i,this.graphicsManager=new t(e,i),this.score=0,this.currentTetromino=null,this.isGameOver=!1,this.start()}start(){this.spawnTetromino(),this.gameLoop()}spawnTetromino(){const t=["I","J","L","O","S","T","Z"],e=t[Math.floor(Math.random()*t.length)];this.currentTetromino=new i(e)}gameLoop(){if(!this.isGameOver){if(this.moveTetrominoDown(),this.currentTetromino&&!this.board.isPositionValid(this.currentTetromino)){this.board.placeTetromino(this.currentTetromino);const t=this.board.clearFullLines();this.score+=1e3*t,this.spawnTetromino(),this.currentTetromino&&!this.board.isPositionValid(this.currentTetromino)&&(this.isGameOver=!0,alert("GAME OVER"))}this.currentTetromino&&this.graphicsManager.render(this.currentTetromino,this.score),setTimeout((()=>this.gameLoop()),300)}}moveTetrominoDown(){if(this.currentTetromino&&(this.currentTetromino.y++,!this.board.isPositionValid(this.currentTetromino))){this.currentTetromino.y--,this.board.placeTetromino(this.currentTetromino);const t=this.board.clearFullLines();this.score+=1e3*t,this.spawnTetromino(),this.board.isPositionValid(this.currentTetromino)||(this.isGameOver=!0,alert("GAME OVER"))}}moveTetromino(t,e){if(this.currentTetromino){const i=this.currentTetromino.x+t,r=this.currentTetromino.y+e;this.isValidMove(i,r,this.currentTetromino.getCurrentShape())&&(this.currentTetromino.x=i,this.currentTetromino.y=r)}}rotateTetromino(){this.currentTetromino&&(this.currentTetromino.rotate(),this.isValidMove(this.currentTetromino.x,this.currentTetromino.y,this.currentTetromino.getCurrentShape())||this.currentTetromino.rotate())}isValidMove(t,e,i){const r=i.map((t=>t.map((t=>0!==t))));for(let i=0;i<r.length;i++)for(let s=0;s<r[i].length;s++)if(r[i][s]){const r=t+s,o=e+i;if(r<0||r>=this.board.getCols()||o<0||o>=this.board.getRows())return!1;if(this.board.grid[o]&&this.board.grid[o][r])return!1}return!0}}(r,s),n=(new class{constructor(t){this.game=t,this.bindEvents()}bindEvents(){window.addEventListener("keydown",(t=>this.handleKeyDown(t)))}handleKeyDown(t){switch(t.key){case"ArrowLeft":this.game.moveTetromino(-1,0);break;case"ArrowRight":this.game.moveTetromino(1,0);break;case"ArrowDown":this.game.moveTetromino(0,1);break;case"ArrowUp":this.game.rotateTetromino()}}}(o),new t(r,{grid:[]}));function h(){n.clear(),n.drawGrid()}h(),window.addEventListener("resize",(()=>{n.setCanvasSize(),n.updateGridSize(),h()}))})();